==37804== NVPROF is profiling process 37804, command: ./darknet speed cfg/yolov4-tiny.cfg yolov4-tiny.weights dog.jpg
==37804== Warning: Profiling results might be incorrect with current version of nvcc compiler used to compile cuda app. Compile with nvcc compiler 9.0 or later version to get correct profiling results. Ignore this warning if code is already compiled with the recommended nvcc version 
==37804== Profiling application: ./darknet speed cfg/yolov4-tiny.cfg yolov4-tiny.weights dog.jpg
==37804== Profiling result:
            Type  Time(%)      Time     Calls       Avg       Min       Max  Name
 GPU activities:   46.40%  723.63ms      1000  723.63us  719.35us  728.79us  sgemm_32x32x32_NN_vec
                   25.84%  403.01ms      1000  403.01us  398.80us  412.36us  im2col_gpu_kernel_ext(int, float const *, int, int, int, int, int, int, int, int, int, int, int, int, float*)
                    8.79%  137.07ms      1000  137.07us  135.97us  168.61us  normalize_kernel(int, float*, float*, float*, int, int, int)
                    5.74%  89.578ms      1000  89.577us  88.899us  96.835us  scale_bias_kernel(float*, float*, int, int, int, int)
                    5.73%  89.430ms      1000  89.430us  88.770us  95.843us  add_bias_kernel(float*, float*, int, int, int, int)
                    4.67%  72.888ms      1000  72.888us  63.746us  103.11us  activate_array_leaky_kernel(float*, int)
                    2.82%  43.929ms      1000  43.929us  43.329us  51.617us  fill_kernel(int, float, float*, int)
      API calls:   83.87%  84.431ms      7000  12.061us  4.8840us  595.57us  cudaLaunchKernel
                    9.03%  9.0870ms      7000  1.2980us     305ns  577.23us  cudaGetDevice
                    4.96%  4.9889ms     16000     311ns     140ns  23.614us  cudaGetLastError
                    2.15%  2.1660ms      6000     360ns     185ns  14.454us  cudaPeekAtLastError
                    0.00%  1.8400us         1  1.8400us  1.8400us  1.8400us  cuDeviceGetCount


9.3. Metrics for Capability 6.x

Devices with compute capability 6.x implement the metrics shown in the following table.
Table 5. Capability 6.x Metrics Metric Name 	Description 	Scope
achieved_occupancy 	Ratio of the average active warps per active cycle to the maximum number of warps supported on a multiprocessor 	Multi-context
atomic_transactions 	Global memory atomic and reduction transactions 	Multi-context
atomic_transactions_per_request 	Average number of global memory atomic and reduction transactions performed for each atomic and reduction instruction 	Multi-context
branch_efficiency 	Ratio of non-divergent branches to total branches expressed as percentage 	Multi-context
cf_executed 	Number of executed control-flow instructions 	Multi-context
cf_fu_utilization 	The utilization level of the multiprocessor function units that execute control-flow instructions on a scale of 0 to 10 	Multi-context
cf_issued 	Number of issued control-flow instructions 	Multi-context
double_precision_fu_utilization 	The utilization level of the multiprocessor function units that execute double-precision floating-point instructions on a scale of 0 to 10 	Multi-context
dram_read_bytes 	Total bytes read from DRAM to L2 cache 	Multi-context
dram_read_throughput 	Device memory read throughput. This is available for compute capability 6.0 and 6.1. 	Multi-context
dram_read_transactions 	Device memory read transactions. This is available for compute capability 6.0 and 6.1. 	Multi-context
dram_utilization 	l
dram_write_bytes 	Total bytes written from L2 cache to DRAM 	Multi-context
dram_write_throughput 	Device memory write throughput. This is available for compute capability 6.0 and 6.1. 	Multi-context
dram_write_transactions 	Device memory write transactions. This is available for compute capability 6.0 and 6.1. 	Multi-context
ecc_throughput 	ECC throughput from L2 to DRAM. This is available for compute capability 6.1. 	Multi-context
ecc_transactions 	Number of ECC transactions between L2 and DRAM. This is available for compute capability 6.1. 	Multi-context
eligible_warps_per_cycle 	Average number of warps that are eligible to issue per active cycle 	Multi-context
flop_count_dp 	Number of double-precision floating-point operations executed by non-predicated threads (add, multiply, and multiply-accumulate). Each multiply-accumulate operation contributes 2 to the count. 	Multi-context
flop_count_dp_add 	Number of double-precision floating-point add operations executed by non-predicated threads. 	Multi-context
flop_count_dp_fma 	Number of double-precision floating-point multiply-accumulate operations executed by non-predicated threads. Each multiply-accumulate operation contributes 1 to the count. 	Multi-context
flop_count_dp_mul 	Number of double-precision floating-point multiply operations executed by non-predicated threads. 	Multi-context
flop_count_hp 	Number of half-precision floating-point operations executed by non-predicated threads (add, multiply, and multiply-accumulate). Each multiply-accumulate operation contributes 2 to the count. 	Multi-context
flop_count_hp_add 	Number of half-precision floating-point add operations executed by non-predicated threads. 	Multi-context
flop_count_hp_fma 	Number of half-precision floating-point multiply-accumulate operations executed by non-predicated threads. Each multiply-accumulate operation contributes 1 to the count. 	Multi-context
flop_count_hp_mul 	Number of half-precision floating-point multiply operations executed by non-predicated threads. 	Multi-context
flop_count_sp 	Number of single-precision floating-point operations executed by non-predicated threads (add, multiply, and multiply-accumulate). Each multiply-accumulate operation contributes 2 to the count. The count does not include special operations. 	Multi-context
flop_count_sp_add 	Number of single-precision floating-point add operations executed by non-predicated threads. 	Multi-context
flop_count_sp_fma 	Number of single-precision floating-point multiply-accumulate operations executed by non-predicated threads. Each multiply-accumulate operation contributes 1 to the count. 	Multi-context
flop_count_sp_mul 	Number of single-precision floating-point multiply operations executed by non-predicated threads. 	Multi-context
flop_count_sp_special 	Number of single-precision floating-point special operations executed by non-predicated threads. 	Multi-context
flop_dp_efficiency 	Ratio of achieved to peak double-precision floating-point operations 	Multi-context
flop_hp_efficiency 	Ratio of achieved to peak half-precision floating-point operations 	Multi-context
flop_sp_efficiency 	Ratio of achieved to peak single-precision floating-point operations 	Multi-context
gld_efficiency 	Ratio of requested global memory load throughput to required global memory load throughput expressed as percentage. 	Multi-context
gld_requested_throughput 	Requested global memory load throughput 	Multi-context
gld_throughput 	Global memory load throughput 	Multi-context
gld_transactions 	Number of global memory load transactions 	Multi-context
gld_transactions_per_request 	Average number of global memory load transactions performed for each global memory load. 	Multi-context
global_atomic_requests 	Total number of global atomic(Atom and Atom CAS) requests from Multiprocessor 	Multi-context
global_hit_rate 	Hit rate for global loads in unified l1/tex cache. Metric value maybe wrong if malloc is used in kernel. 	Multi-context
global_load_requests 	Total number of global load requests from Multiprocessor 	Multi-context
global_reduction_requests 	Total number of global reduction requests from Multiprocessor 	Multi-context
global_store_requests 	Total number of global store requests from Multiprocessor. This does not include atomic requests. 	Multi-context
gst_efficiency 	Ratio of requested global memory store throughput to required global memory store throughput expressed as percentage. 	Multi-context
gst_requested_throughput 	Requested global memory store throughput 	Multi-context
gst_throughput 	Global memory store throughput 	Multi-context
gst_transactions 	Number of global memory store transactions 	Multi-context
gst_transactions_per_request 	Average number of global memory store transactions performed for each global memory store 	Multi-context
half_precision_fu_utilization 	The utilization level of the multiprocessor function units that execute 16 bit floating-point instructions on a scale of 0 to 10 	Multi-context
inst_bit_convert 	Number of bit-conversion instructions executed by non-predicated threads 	Multi-context
inst_compute_ld_st 	Number of compute load/store instructions executed by non-predicated threads 	Multi-context
inst_control 	Number of control-flow instructions executed by non-predicated threads (jump, branch, etc.) 	Multi-context
inst_executed 	The number of instructions executed 	Multi-context
inst_executed_global_atomics 	Warp level instructions for global atom and atom cas 	Multi-context
inst_executed_global_loads 	Warp level instructions for global loads 	Multi-context
inst_executed_global_reductions 	Warp level instructions for global reductions 	Multi-context
inst_executed_global_stores 	Warp level instructions for global stores 	Multi-context
inst_executed_local_loads 	Warp level instructions for local loads 	Multi-context
inst_executed_local_stores 	Warp level instructions for local stores 	Multi-context
inst_executed_shared_atomics 	Warp level shared instructions for atom and atom CAS 	Multi-context
inst_executed_shared_loads 	Warp level instructions for shared loads 	Multi-context
inst_executed_shared_stores 	Warp level instructions for shared stores 	Multi-context
inst_executed_surface_atomics 	Warp level instructions for surface atom and atom cas 	Multi-context
inst_executed_surface_loads 	Warp level instructions for surface loads 	Multi-context
inst_executed_surface_reductions 	Warp level instructions for surface reductions 	Multi-context
inst_executed_surface_stores 	Warp level instructions for surface stores 	Multi-context
inst_executed_tex_ops 	Warp level instructions for texture 	Multi-context
inst_fp_16 	Number of half-precision floating-point instructions executed by non-predicated threads (arithmetic, compare, etc.) 	Multi-context
inst_fp_32 	Number of single-precision floating-point instructions executed by non-predicated threads (arithmetic, compare, etc.) 	Multi-context
inst_fp_64 	Number of double-precision floating-point instructions executed by non-predicated threads (arithmetic, compare, etc.) 	Multi-context
inst_integer 	Number of integer instructions executed by non-predicated threads 	Multi-context
inst_inter_thread_communication 	Number of inter-thread communication instructions executed by non-predicated threads 	Multi-context
inst_issued 	The number of instructions issued 	Multi-context
inst_misc 	Number of miscellaneous instructions executed by non-predicated threads 	Multi-context
inst_per_warp 	Average number of instructions executed by each warp 	Multi-context
inst_replay_overhead 	Average number of replays for each instruction executed 	Multi-context
ipc 	Instructions executed per cycle 	Multi-context
issue_slot_utilization 	Percentage of issue slots that issued at least one instruction, averaged across all cycles 	Multi-context
issue_slots 	The number of issue slots used 	Multi-context
issued_ipc 	Instructions issued per cycle 	Multi-context
l2_atomic_throughput 	Memory read throughput seen at L2 cache for atomic and reduction requests 	Multi-context
l2_atomic_transactions 	Memory read transactions seen at L2 cache for atomic and reduction requests 	Multi-context
l2_global_atomic_store_bytes 	Bytes written to L2 from Unified cache for global atomics (ATOM and ATOM CAS) 	Multi-context
l2_global_load_bytes 	Bytes read from L2 for misses in Unified Cache for global loads 	Multi-context
l2_global_reduction_bytes 	Bytes written to L2 from Unified cache for global reductions 	Multi-context
l2_local_global_store_bytes 	Bytes written to L2 from Unified Cache for local and global stores. This does not include global atomics. 	Multi-context
l2_local_load_bytes 	Bytes read from L2 for misses in Unified Cache for local loads 	Multi-context
l2_read_throughput 	Memory read throughput seen at L2 cache for all read requests 	Multi-context
l2_read_transactions 	Memory read transactions seen at L2 cache for all read requests 	Multi-context
l2_surface_atomic_store_bytes 	Bytes transferred between Unified Cache and L2 for surface atomics (ATOM and ATOM CAS) 	Multi-context
l2_surface_load_bytes 	Bytes read from L2 for misses in Unified Cache for surface loads 	Multi-context
l2_surface_reduction_bytes 	Bytes written to L2 from Unified Cache for surface reductions 	Multi-context
l2_surface_store_bytes 	Bytes written to L2 from Unified Cache for surface stores. This does not include surface atomics. 	Multi-context
l2_tex_hit_rate 	Hit rate at L2 cache for all requests from texture cache 	Multi-context
l2_tex_read_hit_rate 	Hit rate at L2 cache for all read requests from texture cache. This is available for compute capability 6.0 and 6.1. 	Multi-context
l2_tex_read_throughput 	Memory read throughput seen at L2 cache for read requests from the texture cache 	Multi-context
l2_tex_read_transactions 	Memory read transactions seen at L2 cache for read requests from the texture cache 	Multi-context
l2_tex_write_hit_rate 	Hit Rate at L2 cache for all write requests from texture cache. This is available for compute capability 6.0 and 6.1. 	Multi-context
l2_tex_write_throughput 	Memory write throughput seen at L2 cache for write requests from the texture cache 	Multi-context
l2_tex_write_transactions 	Memory write transactions seen at L2 cache for write requests from the texture cache 	Multi-context
l2_utilization 	The utilization level of the L2 cache relative to the peak utilization on a scale of 0 to 10 	Multi-context
l2_write_throughput 	Memory write throughput seen at L2 cache for all write requests 	Multi-context
l2_write_transactions 	Memory write transactions seen at L2 cache for all write requests 	Multi-context
ldst_executed 	Number of executed local, global, shared and texture memory load and store instructions 	Multi-context
ldst_fu_utilization 	The utilization level of the multiprocessor function units that execute shared load, shared store and constant load instructions on a scale of 0 to 10 	Multi-context
ldst_issued 	Number of issued local, global, shared and texture memory load and store instructions 	Multi-context
local_hit_rate 	Hit rate for local loads and stores 	Multi-context
local_load_requests 	Total number of local load requests from Multiprocessor 	Multi-context
local_load_throughput 	Local memory load throughput 	Multi-context
local_load_transactions 	Number of local memory load transactions 	Multi-context
local_load_transactions_per_request 	Average number of local memory load transactions performed for each local memory load 	Multi-context
local_memory_overhead 	Ratio of local memory traffic to total memory traffic between the L1 and L2 caches expressed as percentage 	Multi-context
local_store_requests 	Total number of local store requests from Multiprocessor 	Multi-context
local_store_throughput 	Local memory store throughput 	Multi-context
local_store_transactions 	Number of local memory store transactions 	Multi-context
local_store_transactions_per_request 	Average number of local memory store transactions performed for each local memory store 	Multi-context
nvlink_overhead_data_received 	Ratio of overhead data to the total data, received through NVLink. This is available for compute capability 6.0. 	Device
nvlink_overhead_data_transmitted 	Ratio of overhead data to the total data, transmitted through NVLink. This is available for compute capability 6.0. 	Device
nvlink_receive_throughput 	Number of bytes received per second through NVLinks. This is available for compute capability 6.0. 	Device
nvlink_total_data_received 	Total data bytes received through NVLinks including headers. This is available for compute capability 6.0. 	Device
nvlink_total_data_transmitted 	Total data bytes transmitted through NVLinks including headers. This is available for compute capability 6.0. 	Device
nvlink_total_nratom_data_transmitted 	Total non-reduction atomic data bytes transmitted through NVLinks. This is available for compute capability 6.0. 	Device
nvlink_total_ratom_data_transmitted 	Total reduction atomic data bytes transmitted through NVLinks This is available for compute capability 6.0. 	Device
nvlink_total_response_data_received 	Total response data bytes received through NVLink, response data includes data for read requests and result of non-reduction atomic requests. This is available for compute capability 6.0. 	Device
nvlink_total_write_data_transmitted 	Total write data bytes transmitted through NVLinks. This is available for compute capability 6.0. 	Device
nvlink_transmit_throughput 	Number of Bytes Transmitted per second through NVLinks. This is available for compute capability 6.0. 	Device
nvlink_user_data_received 	User data bytes received through NVLinks, doesn't include headers. This is available for compute capability 6.0. 	Device
nvlink_user_data_transmitted 	User data bytes transmitted through NVLinks, doesn't include headers. This is available for compute capability 6.0. 	Device
nvlink_user_nratom_data_transmitted 	Total non-reduction atomic user data bytes transmitted through NVLinks. This is available for compute capability 6.0. 	Device
nvlink_user_ratom_data_transmitted 	Total reduction atomic user data bytes transmitted through NVLinks. This is available for compute capability 6.0. 	Device
nvlink_user_response_data_received 	Total user response data bytes received through NVLink, response data includes data for read requests and result of non-reduction atomic requests. This is available for compute capability 6.0. 	Device
nvlink_user_write_data_transmitted 	User write data bytes transmitted through NVLinks. This is available for compute capability 6.0. 	Device
pcie_total_data_received 	Total data bytes received through PCIe 	Device
pcie_total_data_transmitted 	Total data bytes transmitted through PCIe 	Device
shared_efficiency 	Ratio of requested shared memory throughput to required shared memory throughput expressed as percentage 	Multi-context
shared_load_throughput 	Shared memory load throughput 	Multi-context
shared_load_transactions 	Number of shared memory load transactions 	Multi-context
shared_load_transactions_per_request 	Average number of shared memory load transactions performed for each shared memory load 	Multi-context
shared_store_throughput 	Shared memory store throughput 	Multi-context
shared_store_transactions 	Number of shared memory store transactions 	Multi-context
shared_store_transactions_per_request 	Average number of shared memory store transactions performed for each shared memory store 	Multi-context
shared_utilization 	The utilization level of the shared memory relative to peak utilization on a scale of 0 to 10 	Multi-context
single_precision_fu_utilization 	The utilization level of the multiprocessor function units that execute single-precision floating-point instructions and integer instructions on a scale of 0 to 10 	Multi-context
sm_efficiency 	The percentage of time at least one warp is active on a specific multiprocessor 	Multi-context
special_fu_utilization 	The utilization level of the multiprocessor function units that execute sin, cos, ex2, popc, flo, and similar instructions on a scale of 0 to 10 	Multi-context
stall_constant_memory_dependency 	Percentage of stalls occurring because of immediate constant cache miss 	Multi-context
stall_exec_dependency 	Percentage of stalls occurring because an input required by the instruction is not yet available 	Multi-context
stall_inst_fetch 	Percentage of stalls occurring because the next assembly instruction has not yet been fetched 	Multi-context
stall_memory_dependency 	Percentage of stalls occurring because a memory operation cannot be performed due to the required resources not being available or fully utilized, or because too many requests of a given type are outstanding 	Multi-context
stall_memory_throttle 	Percentage of stalls occurring because of memory throttle 	Multi-context
stall_not_selected 	Percentage of stalls occurring because warp was not selected 	Multi-context
stall_other 	Percentage of stalls occurring due to miscellaneous reasons 	Multi-context
stall_pipe_busy 	Percentage of stalls occurring because a compute operation cannot be performed because the compute pipeline is busy 	Multi-context
stall_sync 	Percentage of stalls occurring because the warp is blocked at a __syncthreads() call 	Multi-context
stall_texture 	Percentage of stalls occurring because the texture sub-system is fully utilized or has too many outstanding requests 	Multi-context
surface_atomic_requests 	Total number of surface atomic(Atom and Atom CAS) requests from Multiprocessor 	Multi-context
surface_load_requests 	Total number of surface load requests from Multiprocessor 	Multi-context
surface_reduction_requests 	Total number of surface reduction requests from Multiprocessor 	Multi-context
surface_store_requests 	Total number of surface store requests from Multiprocessor 	Multi-context
sysmem_read_bytes 	Number of bytes read from system memory 	Multi-context
sysmem_read_throughput 	System memory read throughput 	Multi-context
sysmem_read_transactions 	Number of system memory read transactions 	Multi-context
sysmem_read_utilization 	The read utilization level of the system memory relative to the peak utilization on a scale of 0 to 10. This is available for compute capability 6.0 and 6.1. 	Multi-context
sysmem_utilization 	The utilization level of the system memory relative to the peak utilization on a scale of 0 to 10. This is available for compute capability 6.0 and 6.1. 	Multi-context
sysmem_write_bytes 	Number of bytes written to system memory 	Multi-context
sysmem_write_throughput 	System memory write throughput 	Multi-context
sysmem_write_transactions 	Number of system memory write transactions 	Multi-context
sysmem_write_utilization 	The write utilization level of the system memory relative to the peak utilization on a scale of 0 to 10. This is available for compute capability 6.0 and 6.1. 	Multi-context
tex_cache_hit_rate 	Unified cache hit rate 	Multi-context
tex_cache_throughput 	Unified cache throughput 	Multi-context
tex_cache_transactions 	Unified cache read transactions 	Multi-context
tex_fu_utilization 	The utilization level of the multiprocessor function units that execute global, local and texture memory instructions on a scale of 0 to 10 	Multi-context
tex_utilization 	The utilization level of the unified cache relative to the peak utilization on a scale of 0 to 10 	Multi-context
texture_load_requests 	Total number of texture Load requests from Multiprocessor 	Multi-context
unique_warps_launched 	Number of warps launched. Value is unaffected by compute preemption. 	Multi-context
warp_execution_efficiency 	Ratio of the average active threads per warp to the maximum number of threads per warp supported on a multiprocessor 	Multi-context
warp_nonpred_execution_efficiency 	Ratio of the average active threads per warp executing non-predicated instructions to the maximum number of threads per warp supported on a multiprocessor 	Multi-context